// /* eslint-disable react/no-unescaped-entities */
// "use client";

// import React, { useState } from "react";
// import { Button, Grid } from "@mui/material";
// import { KeyOff } from "@mui/icons-material";
// import { toast } from "sonner";
// import { FieldValues } from "react-hook-form";
// import { z } from "zod";
// import { zodResolver } from "@hookform/resolvers/zod";
// import { useCreateUserMutation } from "@/redux/api/userApi";
// import AutoGeneratePasswordInput from "@/components/Forms/AutoGeneratedPassword";
// import TECForm from "@/components/Forms/Form";
// import TECModal from "@/components/shared/TECModal/TECModal";
// import TECInput from "@/components/Forms/Input";
// import TECDatePicker from "@/components/Forms/DatePicker";
// import TECSelect from "@/components/Forms/Select";
// import { Gender, Role } from "@/types";
// import TECMultiSelect from "@/components/Forms/MultiSelect";

// const userSchema = z.object({
//   name: z.object({
//     firstName: z.string().min(1, "First name is required"),
//     lastName: z.string().min(1, "Last name is required"),
//   }),
//   phone: z.string().min(1, "Phone number is required"),
//   email: z.string().email("Invalid email address"),
//   password: z.string().min(6, "Password required"),
//   dob: z
//     .string()
//     .refine((val) => !isNaN(Date.parse(val)), "Invalid date of birth"),
//   gender: z.enum(["male", "female", "others"], {
//     message: "Gender must be 'male', 'female', or 'others'",
//   }),
//   role: z.enum(["admin", "manager", "editor"], {
//     message: "Role must be 'admin', 'manager', or 'editor'",
//   }),
//   department: z
//     .array(
//       z.enum(["content", "hotel", "restaurant"], {
//         message: "Department must be 'content', 'hotel', or 'restaurant'",
//       })
//     )
//     .min(1, "At least one department must be selected"),
// });

// const defaultValues = {
//   name: { firstName: "", lastName: "" },
//   phone: "",
//   email: "",
//   dob: "",
//   gender: "male",
//   role: "editor",
//   department: [],
// };

// export type TProps = {
//   open: boolean;
//   setOpen: React.Dispatch<React.SetStateAction<boolean>>;
// };

// const UserCreateModal = ({ open, setOpen }: TProps) => {
//   const [createUser] = useCreateUserMutation();
//   const [password, setPassword] = useState("");

//   const handleGeneratePassword = () => {
//     const newPassword = AutoGeneratePasswordInput(8);
//     setPassword(newPassword);
//   };

//   const submitHandler = async (values: FieldValues) => {


//     try {
//       const res = await createUser(values).unwrap();
      

//       if (res.employeeId) {
//         toast.success("User created successfully!");
//         setOpen(false);
//       }
//     } catch (error: any) {
//       toast.error(error?.data.message, { duration: 5000 });
 
//     }
//   };

//   return (
//     <TECModal open={open} setOpen={setOpen} title="Create a User">
//       <TECForm
//         onSubmit={submitHandler}
//         resolver={zodResolver(userSchema)}
//         defaultValues={defaultValues}
//       >
//         <Grid container spacing={2} sx={{ my: 2 }}>
//           <Grid item xs={12} sm={6} md={4}>
//             <TECInput name="name.firstName" label="First Name" fullWidth />
//           </Grid>
//           <Grid item xs={12} sm={6} md={4}>
//             <TECInput name="name.lastName" label="Last Name" fullWidth />
//           </Grid>
//           <Grid item xs={12} sm={6} md={4}>
//             <TECInput name="phone" label="Phone" fullWidth />
//           </Grid>
//           <Grid item xs={12} sm={6} md={4}>
//             <TECInput name="email" type="email" label="Email" fullWidth />
//           </Grid>
//           <Grid item xs={12} sm={6} md={4}>
//             <TECDatePicker
//               name="dob"
//               label="Date Of Birth"
//               disablePast={false}
//             />
//           </Grid>
//           <Grid item xs={12} sm={6} md={4}>
//             <TECSelect items={Gender} name="gender" label="Gender" fullWidth />
//             {/* <INTRadioButton
//               name="gender"
//               label="Gender"
//               options={[
//                 { label: "Female", value: "female" },
//                 { label: "Male", value: "male" },
//                 { label: "Other", value: "other" },
//               ]}
//               row
//             /> */}
//           </Grid>
//           <Grid item xs={12} sm={6} md={4}>
//             <TECSelect items={Role} name="role" label="Role" fullWidth />
//           </Grid>
//           <Grid item xs={12} sm={6} md={4}>
//             <TECMultiSelect
//               name="department"
//               label="Department"
//               items={Gender}
//             />
            
//           </Grid>
//           <Grid item xs={12} sm={6} md={4}>
//             <AutoGeneratePasswordInput
//               name="password"
//               label="Password"
//               fullWidth
//               password={password}
//             />
//           </Grid>
//           <Grid container justifyContent="flex-end" alignItems="flex-end">
//             <Button
//               onClick={handleGeneratePassword}
//               variant="outlined"
//               sx={{ border: "1px solid #ddd" }}
//             >
//               <KeyOff className="mr-1" /> Auto Generate
//             </Button>
//           </Grid>
//         </Grid>
//         <Button type="submit" variant="contained" color="primary">
//           Create a User
//         </Button>
//       </TECForm>
//     </TECModal>
//   );
// };

// export default UserCreateModal;
import React from 'react';

const CreateUserModer = () => {
  return (
    <div>
      <h4>user</h4>
    </div>
  );
};

export default CreateUserModer;